- name: Проверка наличия файла конфига
  stat:
    path: /etc/kubernetes/admin.conf
  register: file_info

- name: Инициализация кластера если конфиг не обнаружен.
  block:
    - name: Инициализация кластера для движков ['container-d', 'cri-o']
      shell: |
        kubeadm init \
                --pod-network-cidr=10.244.0.0/16 \
                --control-plane-endpoint "172.30.0.210:8888" \
                --upload-certs
      register: init_output_containerd_crio
      when: cri_variant in ['container-d', 'cri-o']


    - name: Инициализация кластера для движка ['docker']
      shell: |
        kubeadm init \
                --cri-socket unix:///var/run/cri-dockerd.sock \
                --pod-network-cidr=10.244.0.0/16 \
                --control-plane-endpoint "172.30.0.210:8888" \
                --upload-certs
      register: init_output_docker
      when: cri_variant == 'docker'

    - name: Сохранение значения init_output для дальнейшего использования
      set_fact:
        init_output: "{{ init_output_containerd_crio if init_output_containerd_crio is defined and init_output_containerd_crio.stdout is defined else init_output_docker }}"

    - name: Фильтрация вывода kubeadm init
      set_fact:
        filtered_output: "{{ init_output.stdout | regex_replace('(\\n|\\t|\\\\n|\\\\)', ' ') }}"

    - name: Фильтр команд для добавления управляющих и рабочих нод
      set_fact:
        control_plane_join_command: "{{ filtered_output | regex_search('kubeadm join(.*?--discovery-token-ca-cert-hash\\s+sha256:[\\w:]+.*?--control-plane.*?--certificate-key.*?[\\w:]+)')}}"
        worker_join_command: "{{ filtered_output | regex_search('kubeadm join(.*?--discovery-token-ca-cert-hash\\s+sha256:[\\w:]+)')}}"

    - name: Установка KUBECONFIG в environment
      lineinfile:
        dest: /etc/environment
        line: 'export KUBECONFIG=/etc/kubernetes/admin.conf'

    - name: Установка KUBECONFIG в bashrc
      lineinfile:
        dest: '~/.bashrc'
        line: 'export KUBECONFIG=/etc/kubernetes/admin.conf'

    - name: Подождем пока всё запустится
      wait_for:
        host: localhost
        port: 6443
        timeout: 300

    - name: Снятие ограничения на запуск рабочих нагрузок c {{ ansible_hostname }}
      shell: "kubectl taint nodes --all node-role.kubernetes.io/control-plane-"
      become: true
      register: taint_result
      failed_when:
        - "'error: taint \"node-role.kubernetes.io/control-plane\" not found' not in taint_result.stderr"
        - "'node/' + ansible_hostname + '.internal untainted' not in taint_result.stdout"
      when: net_variant == 'calico_istio' and inventory_hostname == 'node1'

    - name: Установка сетевого плагина (CNI)
      include_role:
        name: cni_provision
        tasks_from: main.yml

    - name: Установка service mesh
      include_role:
        name: mesh_provision
        tasks_from: main.yml

  when: not file_info.stat.exists
